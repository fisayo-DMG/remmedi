{"version":3,"sources":["logo.svg","components/Header.js","components/Prescription.js","components/PrescriptionsList.js","components/AddPrescription.js","components/SignUp.js","components/SignIn.js","components/LandingPage.js","App.js","serviceWorker.js","index.js"],"names":["module","exports","Header","logout","className","to","onClick","Prescription","props","start","end","numOfTimesPerDay","numOfTablets","completedDosage","completeDosage","id","startDate","Date","dateString","toDateString","numDays","datesArray","date","push","toUTCString","setDate","getDate","getDatesArray","length","dosage","duration","tabletString","name","type","checked","onChange","style","marginLeft","PrescriptionsList","useEffect","getPrescriptions","console","log","prescriptions","data","map","p","key","_id","endDate","AddPrescription","addPrescription","useState","numOFTablets","state","setState","handleChange","e","target","value","prev","onSubmit","preventDefault","prescription","Number","htmlFor","placeholder","disabled","hidden","required","SignUp","signup","firstName","lastName","dateOfBirth","email","password","SignIn","login","user","LandingPage","exact","path","component","App","setPrescriptions","setLoading","authenticated","setAuthenticated","userData","setUserData","localStorage","getItem","a","config","headers","axios","post","res","status","setItem","token","userId","presc","userID","get","test","find","removeItem","Boolean","window","location","hostname","match","ReactDOM","render","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","error","message"],"mappings":"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","file":"static/js/main.e6cb17e9.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/logo.5d5d9eef.svg\";","import React from \"react\";\r\nimport { Link } from \"react-router-dom\";\r\n\r\nconst Header = ({logout}) => {\r\n  return (\r\n    <header className=\"inner\">\r\n      <h2>\r\n        <Link to=\"/\">\r\n          <i className=\"fas fa-prescription-bottle-alt\"></i> RemMedi\r\n        </Link>\r\n      </h2>\r\n      <nav>\r\n        <ul>\r\n          <li>\r\n            <Link to=\"/\">Prescriptions</Link>\r\n          </li>\r\n          <li>\r\n            <Link to=\"/add\">Add Prescription</Link>\r\n          </li>\r\n          <li>\r\n            <Link to=\"/\" onClick={logout}>Log Out</Link>\r\n          </li>\r\n        </ul>\r\n      </nav>\r\n    </header>\r\n  );\r\n};\r\n\r\nexport default Header;\r\n","import React from \"react\";\r\nimport {Link} from 'react-router-dom'\r\n\r\nconst Prescription = props => {\r\n  const getDatesArray = (start, end) => {\r\n    let datesArray = [];\r\n    let date = new Date(start);\r\n\r\n    while (date <= end) {\r\n      datesArray.push(new Date(date).toUTCString());\r\n      date.setDate(date.getDate() + 1);\r\n    }\r\n\r\n    return datesArray;\r\n  };\r\n\r\n  const { start, end, numOfTimesPerDay, numOfTablets, completedDosage, completeDosage, id } = props;\r\n  let startDate = new Date(start);\r\n  let dateString = startDate.toDateString();\r\n  let endDate = new Date(end);\r\n  let numDays = getDatesArray(startDate, endDate).length;\r\n  let dosage = numOfTimesPerDay === 1 ? \"once a day\" : `${numOfTimesPerDay} times daily`;\r\n  let duration = numDays === 1 ? \"one day\" : `${numDays} days`;\r\n  let tabletString = numOfTablets === 1 ? 'one tablet' : `${numOfTablets} tablets`;\r\n\r\n  return (\r\n    <div className=\"gig\">\r\n      <h3>{props.name}</h3>\r\n      <p>\r\n        Take {tabletString} {dosage} for {duration} starting from {dateString}.\r\n      </p>\r\n      <ul>\r\n            <li>Completed: <input type='checkbox' name='completedDosage' checked={completedDosage} onChange={() => completeDosage(id)}/></li>\r\n            <li>\r\n              <Link to='/details' className=\"btn btn-reverse\" style={{marginLeft: '40px'}}>\r\n                Details\r\n              </Link>\r\n            </li>\r\n          </ul>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Prescription;\r\n","import React, {useEffect, useState} from \"react\";\r\n// import { data } from \"../data\";\r\nimport Prescription from \"./Prescription\";\r\n\r\nconst PrescriptionsList = (props) => {\r\n\r\n  useEffect(() => {\r\n    props.getPrescriptions();\r\n    console.log('use effect')\r\n  }, []);\r\n\r\n  // console.log(props, \"THE PROPS\");\r\n  const {completeDosage, data} = props;\r\n\r\n  const prescriptions = data\r\n    // .filter(p => p.email === email)\r\n    // .filter(p => p.completedDosage !== true)\r\n    .map(p => {\r\n    return <Prescription key={p._id} name={p.name} start={p.startDate} end={p.endDate} numOfTimesPerDay={p.numOfTimesPerDay} numOfTablets={p.numOfTablets} id={p._id} completedDosage={p.completedDosage} completeDosage={completeDosage}/>;\r\n  });\r\n  return (\r\n    <>\r\n      <section id=\"gigs\" className=\"container\">\r\n        <h1>Prescriptions</h1>\r\n        {prescriptions}\r\n      </section>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default PrescriptionsList;\r\n","import React, { useState } from \"react\";\r\nimport Dropdown from \"react-dropdown\";\r\nimport \"react-dropdown/style.css\";\r\n\r\nconst AddPrescription = ({ addPrescription }) => {\r\n  const [state, setState] = useState({\r\n    name: \"\",\r\n    numOFTablets: \"\",\r\n    numOfTimesPerDay: \"\",\r\n    startDate: \"\",\r\n    endDate: \"\"\r\n    // duration: []\r\n  });\r\n\r\n  console.log('ADD PRESCRIPTION')\r\n\r\n  // const options = [\"one\", \"two\", \"three\"];\r\n\r\n  // const defaultOption = options[0];\r\n\r\n  const handleChange = e => {\r\n    const { name, value } = e.target;\r\n    setState(prev => {\r\n      return {\r\n        ...prev,\r\n        [name]: value\r\n      };\r\n    });\r\n  };\r\n\r\n  const handleSubmit = e => {\r\n    e.preventDefault();\r\n    const prescription = {\r\n      // id: Math.floor(Math.random() * 100000000),\r\n      name: state.name,\r\n      numOfTablets: Number(state.numOFTablets),\r\n      numOfTimesPerDay: Number(state.numOfTimesPerDay),\r\n      // startDate: new Date(state.startDate).toDateString(),\r\n      startDate: state.startDate,\r\n      endDate: state.endDate,\r\n      completedDosage: false\r\n    };\r\n    addPrescription(prescription);\r\n  };\r\n  return (\r\n    <>\r\n      <section id=\"add\" className=\"container\">\r\n        <div className=\"form-wrap\">\r\n          <h1>Add A Prescription</h1>\r\n          <p>Lorem Ipsum</p>\r\n          <form onSubmit={handleSubmit} >\r\n            <div className=\"input-group\">\r\n              <label htmlFor=\"name\">Name of Drug</label>\r\n              <input\r\n                type=\"text\"\r\n                name=\"name\"\r\n                id=\"name\"\r\n                className=\"input-box\"\r\n                placeholder=\"Enter the name of the drug, eg. Panadol\"\r\n                value={state.name}\r\n                onChange={handleChange}\r\n              />\r\n            </div>\r\n            <div className=\"input-group\">\r\n              <label htmlFor=\"numOFTablets\">Number of Tablets</label>\r\n              <input\r\n                type=\"number\"\r\n                name=\"numOFTablets\"\r\n                id=\"numOFTablets\"\r\n                className=\"input-box\"\r\n                placeholder=\"Enter the number of tablets per dosage\"\r\n                value={state.numOFTablets}\r\n                onChange={handleChange}\r\n              />\r\n            </div>\r\n            <div className=\"input-group\">\r\n              <label htmlFor=\"numOfTimesPerDay\">Daily Dosage</label>\r\n              {/* <input\r\n                type=\"dropdown\"\r\n                name=\"numOfTimesPerDay\"\r\n                id=\"numOfTimesPerDay\"\r\n                className=\"input-box\"\r\n                placeholder=\"Enter the name of the drug, eg. Panadol\"\r\n              /> */}\r\n              {/* <Dropdown name=\"numOfTimesPerDay\" className='input-box' options={options} onChange={(e) => console.log(e.value)} value={defaultOption} placeholder=\"Select an option\" /> */}\r\n              <select\r\n                name=\"numOfTimesPerDay\"\r\n                onChange={handleChange}\r\n                id=\"numOfTimesPerDay\"\r\n                className=\"input-box\"\r\n                placeholder=\"Select an option\"\r\n                value={state.numOfTimesPerDay}\r\n              >\r\n                <option value=\"\" disabled hidden>\r\n                  Select your option\r\n                </option>\r\n                <option value={1}>Once a day</option>\r\n                <option value={2}>Twice daily</option>\r\n                <option value={3}>Thrice daily</option>\r\n                {/* <option value={state.numOfTimesPerDay}>Thrice daily</option> */}\r\n              </select>\r\n            </div>\r\n            <div className=\"input-group\">\r\n              <label htmlFor=\"startDate\">Start Date</label>\r\n              <input\r\n                required\r\n                type=\"date\"\r\n                name=\"startDate\"\r\n                id=\"startDate\"\r\n                className=\"input-box\"\r\n                onChange={handleChange}\r\n                value={state.startDate}\r\n              />\r\n            </div>\r\n            <div className=\"input-group\">\r\n              <label htmlFor=\"endDate\">End Date</label>\r\n              <input\r\n                required\r\n                type=\"date\"\r\n                name=\"endDate\"\r\n                id=\"endDate\"\r\n                className=\"input-box\"\r\n                onChange={handleChange}\r\n                value={state.endDate}\r\n              />\r\n            </div>\r\n            <input\r\n              type=\"submit\"\r\n              value=\"Add Prescription\"\r\n              className=\"btn btn-reverse\"\r\n            />\r\n          </form>\r\n        </div>\r\n      </section>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default AddPrescription;\r\n","import React, {useState} from \"react\";\r\n\r\nconst SignUp = ({signup}) => {\r\n  const [state, setState] = useState({\r\n    firstName: '',\r\n    lastName: '',\r\n    dateOfBirth: '',\r\n    email: '',\r\n    password: ''\r\n  })\r\n\r\n  const handleChange = (e) => {\r\n    const {name, value} = e.target;\r\n    setState((prev) => {\r\n      return {\r\n        ...prev,\r\n        [name]: value\r\n      }\r\n    })\r\n  }\r\n\r\n  const handleSubmit = (e) => {\r\n    e.preventDefault();\r\n    const {firstName, lastName, dateOfBirth, email, password} = state;\r\n    const user = {\r\n      firstName,\r\n      lastName,\r\n      dateOfBirth,\r\n      email,\r\n      password\r\n    }\r\n    signup(user)\r\n  }\r\n  return (\r\n    // <div>\r\n    //     <h3>Register</h3>\r\n    //     <label>Username\r\n    //         <input type='text' />\r\n    //     </label>\r\n    //     <label>Password\r\n    //         <input type='password' />\r\n    //     </label>\r\n    // </div>\r\n\r\n    <>\r\n      <section id=\"add\" className=\"container\">\r\n        <div className=\"form-wrap\">\r\n          <form onSubmit={handleSubmit}>\r\n          <div className=\"input-group\">\r\n              <label htmlFor=\"firstName\">First Name</label>\r\n              <input\r\n                type=\"text\"\r\n                name=\"firstName\"\r\n                id=\"firstName\"\r\n                className=\"input-box\"\r\n                placeholder=\"Enter your first name\"\r\n                value={state.firstName}\r\n                onChange={handleChange}\r\n              />\r\n            </div>\r\n            <div className=\"input-group\">\r\n              <label htmlFor=\"lastName\">Last Name</label>\r\n              <input\r\n                type=\"text\"\r\n                name=\"lastName\"\r\n                id=\"lastName\"\r\n                className=\"input-box\"\r\n                placeholder=\"Enter your last name\"\r\n                value={state.lastName}\r\n                onChange={handleChange}\r\n              />\r\n            </div>\r\n            <div className=\"input-group\">\r\n              <label htmlFor=\"startDate\">Date of Birth</label>\r\n              <input\r\n                required\r\n                type=\"date\"\r\n                name=\"dateOfBirth\"\r\n                id=\"startDate\"\r\n                className=\"input-box\"\r\n                value={state.dateOfBirth}\r\n                onChange={handleChange}\r\n              />\r\n            </div>\r\n            <div className=\"input-group\">\r\n              <label htmlFor=\"email\">E-mail</label>\r\n              <input\r\n                type=\"email\"\r\n                name=\"email\"\r\n                id=\"email\"\r\n                className=\"input-box\"\r\n                placeholder=\"Enter your email address\"\r\n                value={state.email}\r\n                onChange={handleChange}\r\n              />\r\n            </div>\r\n            <div className=\"input-group\">\r\n              <label htmlFor=\"numOFTablets\">Password</label>\r\n              <input\r\n                type=\"password\"\r\n                name=\"password\"\r\n                id=\"numOFTablets\"\r\n                className=\"input-box\"\r\n                placeholder=\"Enter password\"\r\n                value={state.password}\r\n                onChange={handleChange}\r\n              />\r\n            </div>\r\n            <input\r\n              type=\"submit\"\r\n              value=\"Sign Up\"\r\n              className=\"btn btn-reverse\"\r\n            />\r\n          </form>\r\n        </div>\r\n      </section>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default SignUp;\r\n","import React, {useState} from 'react'\r\n\r\nconst SignIn = ({login}) => {\r\n\r\n  const [state, setState] = useState({\r\n    email: '',\r\n    password: ''\r\n  });\r\n\r\n  const handleChange = (e) => {\r\n    const {name, value} = e.target;\r\n    setState((prev) => {\r\n      return {\r\n        ...prev,\r\n        [name]: value\r\n      }\r\n    })\r\n  }\r\n\r\n  const handleSubmit = (e) => {\r\n    e.preventDefault();\r\n    const user = {\r\n      email: state.email,\r\n      password: state.password\r\n    }\r\n    login(user);\r\n  }\r\n    return (\r\n        // <div>\r\n        //     <h3>Login</h3>\r\n        //     <label>Username\r\n        //         <input type='text' name='username' />\r\n        //     </label>\r\n        //     <label>Password\r\n        //         <input type='password' name='password' />\r\n        //     </label>\r\n        // </div>\r\n\r\n        <>\r\n      <section id=\"add\" className=\"container\">\r\n        <div className=\"form-wrap\">\r\n          <form onSubmit={handleSubmit}>\r\n            <div className=\"input-group\">\r\n              <label htmlFor=\"signinName\">Username</label>\r\n              <input\r\n                type=\"text\"\r\n                name=\"email\"\r\n                id=\"signinName\"\r\n                className=\"input-box\"\r\n                placeholder=\"Enter your email as your username\"\r\n                value={state.name}\r\n                onChange={handleChange}\r\n              />\r\n            </div>\r\n            <div className=\"input-group\">\r\n              <label htmlFor=\"signinPassword\">Password</label>\r\n              <input\r\n                type=\"password\"\r\n                name=\"password\"\r\n                id=\"signinPassword\"\r\n                className=\"input-box\"\r\n                placeholder=\"Enter password\"\r\n                value={state.password}\r\n                onChange={handleChange}\r\n              />\r\n            </div>\r\n            <input\r\n              type=\"submit\"\r\n              value=\"Login\"\r\n              className=\"btn btn-reverse\"\r\n            />\r\n          </form>\r\n        </div>\r\n      </section>\r\n    </>\r\n    )\r\n}\r\n\r\nexport default SignIn\r\n","import React, {useEffect} from \"react\";\r\nimport { Link } from \"react-router-dom\";\r\n// import \"../LandingPage.css\";\r\nimport SignUp from \"./SignUp\";\r\nimport SignIn from \"./SignIn\";\r\nimport { Route, Switch } from \"react-router-dom\";\r\n\r\nconst LandingPage = ({login, signup}) => {\r\n\r\n  useEffect(() => {\r\nconsole.log('LANDING PAGE')\r\n  }, [])\r\n  return (\r\n    // <div className='container'>\r\n    //   <SignIn />\r\n    //   <SignUp />\r\n    // </div>\r\n    <>\r\n      <section id=\"add\" className=\"container\">\r\n        <div className=\"form-wrap\">\r\n        <h2>\r\n        <Link to=\"/\">\r\n          <i className=\"fas fa-prescription-bottle-alt\"></i> RemMedi\r\n        </Link>\r\n      </h2>\r\n          <header className=\"inner\">\r\n            <nav>\r\n              <ul>\r\n                <li>\r\n                  <Link to=\"/\">Login</Link>\r\n                </li>\r\n                <li>\r\n                  <Link to=\"/register\">Register</Link>\r\n                </li>\r\n              </ul>\r\n            </nav>\r\n          </header>\r\n          <Switch>\r\n          {/* <Route exact path='/' component={SignIn} /> */}\r\n          <Route\r\n          exact\r\n          path=\"/\"\r\n          component={props => (\r\n            <SignIn\r\n              login={login}\r\n            />\r\n          )}\r\n        />\r\n        <Route\r\n          exact\r\n          path=\"/register\"\r\n          component={props => (\r\n            <SignUp\r\n              signup={signup}\r\n            />\r\n          )}\r\n        />\r\n          {/* <Route exact path='/register' component={SignUp} /> */}\r\n          {/* <SignIn />\r\n          <SignUp /> */}\r\n          </Switch>\r\n        </div>\r\n      </section>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default LandingPage;\r\n","import React, { useState, useEffect } from \"react\";\r\nimport logo from \"./logo.svg\";\r\nimport \"./App.css\";\r\nimport { data } from \"./data\";\r\nimport Header from \"./components/Header\";\r\nimport PrescriptionsList from \"./components/PrescriptionsList\";\r\nimport AddPrescription from \"./components/AddPrescription\";\r\nimport LandingPage from \"./components/LandingPage\";\r\nimport { Route, Switch, Redirect } from \"react-router-dom\";\r\nimport axios from \"axios\";\r\n\r\nfunction App() {\r\n  const [prescriptions, setPrescriptions] = useState([]);\r\n  const [loading, setLoading] = useState(true);\r\n  const [error, setError] = useState(null);\r\n  const [authenticated, setAuthenticated] = useState(false);\r\n  const [userData, setUserData] = useState('data');\r\n\r\n  let test = null;\r\n\r\n  useEffect(() => {\r\n    console.log('app.js use effect')\r\n    if (localStorage.getItem('remmediUserToken')) {\r\n      setUserData(localStorage.getItem('remmediUserData'))\r\n      setAuthenticated(true);\r\n    } else {\r\n      setAuthenticated(false)\r\n    }\r\n  }, [])\r\n\r\n  const login = async (user) => {\r\n    console.log('LOG IN')\r\n    const config = {\r\n      headers: {\r\n        \"Content-Type\": \"application/json\",\r\n      }\r\n    };\r\n    try {\r\n      const res = await axios.post(\r\n        \"/api/v1/users/login\", user, config\r\n      );\r\n      if(res.data.status === 'success'){\r\n        localStorage.setItem('remmediUserToken', res.data.token);\r\n        console.log(res.data, \"USER DATA\" );\r\n        localStorage.setItem('remmediUserData', res.data.userData.userId);\r\n        // console.log(localStorage.getItem('remmediUserData'))\r\n        // setUserData(res.data.userData)\r\n        setUserData(localStorage.getItem('remmediUserData'))\r\n        setAuthenticated(true)\r\n      } else {\r\n        console.log('What is going on?')\r\n      }\r\n    } catch (err) {\r\n      console.log(err)\r\n    }\r\n  }\r\n\r\n  const signup = async (user) => {\r\n    console.log('SIGN IN');\r\n    const config = {\r\n      headers:{\r\n        \"Content-Type\": \"application/json\"\r\n      }\r\n    };\r\n    try {\r\n      const res = await axios.post(\r\n        \"/api/v1/users/signup\", user, config\r\n      );\r\n      login({\r\n        email: user.email,\r\n        password: user.password\r\n      })\r\n    } catch (err) {\r\n      console.log(err);\r\n    }\r\n  }\r\n\r\n  const logout = () => {\r\n    setAuthenticated(false);\r\n    localStorage.removeItem(\"remmediUserToken\");\r\n    localStorage.removeItem(\"remmediUserData\");\r\n    return <Redirect to='/' />\r\n  }\r\n\r\n  const addPrescription = async presc => {\r\n    const prescription = {...presc, userID: userData.userId, email: userData.email}\r\n    const config = {\r\n      headers: {\r\n        \"Content-Type\": \"application/json\",\r\n        'x-access-token': localStorage.getItem('remmediUserToken')\r\n      }\r\n    };\r\n    console.log(prescription);\r\n    try {\r\n      const res = await axios.post(\r\n        \"/api/v1/prescriptions\",\r\n        prescription,\r\n        config\r\n      );\r\n      console.log(\"Hello\");\r\n      // setPrescriptions((prev) => {\r\n      //   return [...prev, res.data.data]\r\n      // })\r\n      getPrescriptions();\r\n    } catch (err) {\r\n      // setError(err.response.data.error);\r\n      console.log(\"err\");\r\n    }\r\n  };\r\n\r\n  async function getPrescriptions() {\r\n    const config = {\r\n      headers: {\r\n        \"Content-Type\": \"application/json\",\r\n        'x-access-token': localStorage.getItem('remmediUserToken')\r\n      }\r\n    };\r\n    try {\r\n\r\n      const res = await axios.get(`/api/v1/prescriptions/${userData}`);\r\n      setLoading(false);\r\n      setPrescriptions(res.data.data);\r\n      // setPrescriptions(data);\r\n      \r\n    } catch (err) {\r\n      // setError(err.response.data.error);\r\n      console.log(err, 'setError')\r\n    }\r\n  }\r\n\r\n  // async function completeDosage(id) {\r\n  //   try {\r\n  //     const res = await axios.patch(`/api/v1/prescriptions/${id}`)\r\n  //     console.log('complete dosage')\r\n  //     getPrescriptions();\r\n  //   } catch (err) {\r\n  //     console.log(err, 'NOT complete dosage')\r\n  //   }\r\n  // }\r\n\r\n  async function completeDosage(id) {\r\n    const test = {\r\n      id: id,\r\n      completedDosage: !prescriptions.find(p => p._id === id).completedDosage\r\n    };\r\n    const config = {\r\n      headers: {\r\n        \"Content-Type\": \"application/json\"\r\n      }\r\n    };\r\n    try {\r\n      const res = await axios.post(\r\n        `/api/v1/prescriptions/update`,\r\n        test,\r\n        config\r\n      );\r\n      console.log(\"complete dosage\");\r\n      getPrescriptions();\r\n    } catch (err) {\r\n      console.log(err, \"NOT complete dosage\");\r\n    }\r\n  }\r\n\r\n  // This should be in PrescriptionList\r\n  // useEffect(() => {\r\n  //   console.log('app.js use effect 2')\r\n  //   getPrescriptions();\r\n  // }, []);\r\n\r\n  if (!authenticated) {\r\n    return (\r\n      <div>\r\n        <LandingPage login={login} signup={signup}/>\r\n      </div>\r\n    );\r\n  }\r\n  return (\r\n    <div>\r\n      <Header logout={logout} />\r\n      <Switch>\r\n        <Route\r\n          exact\r\n          path=\"/\"\r\n          component={props => (\r\n            <PrescriptionsList\r\n            userData={userData}\r\n              data={prescriptions}\r\n              completeDosage={completeDosage}\r\n              getPrescriptions={getPrescriptions}\r\n            />\r\n          )}\r\n        />\r\n        {/* <Route exact path='/' component={PrescriptionsList} /> */}\r\n        <Route\r\n          path=\"/add\"\r\n          component={props => (\r\n            <AddPrescription addPrescription={addPrescription} />\r\n          )}\r\n        />\r\n      </Switch>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default App;\r\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' }\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.css\";\nimport App from \"./App\";\nimport { BrowserRouter as Router } from \"react-router-dom\";\nimport * as serviceWorker from \"./serviceWorker\";\n\nReactDOM.render(\n  <Router>\n    <App />\n  </Router>,\n  document.getElementById(\"root\")\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}